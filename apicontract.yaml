openapi: 3.0.3
info:
  title:  Music App API
  description: |-
    This is a clone of Spotify mostly to learn C#. I decided the endpoints loosely based off what I've seen from the actual Spotify
  version: 1.0.11

tags:
  - name: song
    description: All information about the songs
paths:
  /songs/:
    post:
      tags:
        - song
      summary: Add a new song to the database
      description: Add a new song to the database
      operationId: addPet
      requestBody:
        description: Add a new song to the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'          
            
        '405':
          description: Invalid input
    
  /songs/{songId}:
    get:
      tags:
        - song
      summary: Find song by ID
      description: Returns a single song
      operationId: getSongById
      parameters:
        - name: songId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Song'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    
    delete:
      tags:
        - song
      summary: Delete song by unique ID
      description: Delete a song from the database with a valid songId
      operationId: deleteSong
      parameters:
        - name: songId
          in: path
          description: ID of the song that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid songId supplied
        '404':
          description: Song not found
      
    put:
      tags:
        - song
      summary: Update existing song
      description: Updates a song that already exists in database. Will get error if song does not exist
      operationId: updateSong
      parameters:
        - name: songId
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent song in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
  
      responses:
        default:
          description: successful operation  
components:
  schemas:
    Song:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Yesterday
        artist:
          type: string
          example: noname
        length:
          type: integer
          format: int64
          example: 360
  
  